syntax = "proto3";
package tabi.token_convert.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/tabilabs/tabi/x/token-convert/types";

// Query creates service with token as RPC
service Query {

  rpc UnlockToken(QueryUnlockTokenRequest) returns (QueryUnlockTokenResponse){
    option (gogoproto.method).get = "/x/token-convert/v1/unlock_token/{address}/by_lock_period";
  }

  rpc UnlockTokens(QueryUnlockTokensRequest) returns (QueryUnlockTokensResponse){
    option (gogoproto.method).get = "/x/token-convert/v1/unlock_token/{address}";
  }

  rpc UnlockTokenTotal(QueryUnlockTokenTotalRequest) returns (QueryUnlockTokenTotalResponse){
    option (gogoproto.method).get = "/x/token-convert/v1/unlock_token/{address}/token_total";
  }
}

message QueryUnlockTokenRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // address is the address to query balances for.
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // denom is the coin denom to query balances for.
  string lock_period_id = 2;
}

message QueryUnlockTokenResponse {
  // amount is the amount of the coin.
  cosmos.base.v1beta1.Coin amount = 1;
}

message QueryUnlockTokensRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // address is the address to query balances for.
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryUnlockTokensResponse {
  repeated UnlockTokenResponse unlock_tokens = 1 [(gogoproto.nullable) = false];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message UnlockTokenResponse  {
  // amount is the amount of the coin.
  cosmos.base.v1beta1.Coin amount = 1;
  // lock_period_id is the lock period id of the unlock token.
  string lock_period_id = 2;
}

message QueryUnlockTokenTotalRequest {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryUnlockTokenTotalResponse {
  // amount is the supply of the coin.
  cosmos.base.v1beta1.Coin amount = 1 [(gogoproto.nullable) = false];
}